name: Build and Inspect Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # dispara quando fizer push de tags como v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.sanitize-tag.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Sanitize ref name for Docker tag
        id: sanitize-tag
        run: |
          REF_TAG=$(echo "${GITHUB_REF_NAME}" \
            | tr '[:upper:]' '[:lower:]' \
            | sed 's/[^a-z0-9.-]/-/g' \
            | sed 's/^-//' \
            | sed 's/-$//')
          echo "tag=$REF_TAG" >> $GITHUB_OUTPUT
          echo "Sanitized REF_TAG: $REF_TAG"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/versionamento-imagens-docker:${{ steps.sanitize-tag.outputs.tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/versionamento-imagens-docker:latest
  inspect:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # PASSO ATUALIZADO COM LÓGICA DE RETRY
      - name: Pull image with retries
        run: |
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/versionamento-imagens-docker:${{ needs.build.outputs.tag }}"
          ATTEMPTS=0
          MAX_ATTEMPTS=5
          until docker pull $IMAGE_NAME; do
            ATTEMPTS=$((ATTEMPTS + 1))
            if [ $ATTEMPTS -ge $MAX_ATTEMPTS ]; then
              echo "Falha ao puxar a imagem '$IMAGE_NAME' após $MAX_ATTEMPTS tentativas."
              exit 1
            fi
            echo "Tentativa $ATTEMPTS falhou. Tentando novamente em 15 segundos..."
            sleep 15
          done
          echo "Imagem '$IMAGE_NAME' puxada com sucesso!"

      - name: Inspect Docker Image
        run: |
          docker image inspect ${{ secrets.DOCKERHUB_USERNAME }}/versionamento-imagens-docker:${{ needs.build.outputs.tag }}
